--************************************************************--
--************************************************************--
--
--   Test for testing observer patterns
--
--   Etienne ANDRE
--   Laboratoire d'Informatique de Paris Nord
--
--                                Created : 2013/03/06
--                          Last modified : 2013/03/06
--                       IMITATOR version : 2.6.0
--************************************************************--
--************************************************************--

var 	x1, x2
		: clock;

	p1, p2
			: parameter;


--****************************************************--
--****************************************************--
-- AUTOMATA
--****************************************************--
--****************************************************--


--****************************************************--
  automaton automaton1
--****************************************************--

synclabs: a1,a3;

loc A1: while x1 <= p1 wait {}
	when x1 = p1 sync a1 goto A2;

loc A2: while x1 <= 5 wait {}
	when x1 = 7 sync a3 goto A9;

loc A9: while True wait {}

end -- automaton1

--****************************************************--
  automaton automaton2
--****************************************************--

synclabs: a2;

loc B1: while x2 <= 9 wait {}
	when x2 = p2 sync a2 goto B9;

loc B9: while True wait {}

end -- automaton2


--****************************************************--
  automaton automaton3
--****************************************************--

synclabs: a4;

loc C1: while x2 <= 8 wait {}
	when x2 = 8 sync a4 goto C9;

loc C9: while True wait {}

end -- automaton3



--****************************************************--
--****************************************************--
-- ANALYSIS
--****************************************************--
--****************************************************--

init := True
	----------------------
	-- Initial locations
	----------------------
	& loc[automaton1] = A1
	& loc[automaton2] = B1
	& loc[automaton3] = C1


	----------------------
	-- Clocks
	----------------------
	& x1 = 0
	& x2 = 0

	----------------------
	-- Constraints
	----------------------

;


(* property := sequence a1; *)
(* property := sequence a1, a2; *)
(* property := sequence a1, a2, a3, a4; *)

(* property := sequence always a1; *)
(* property := sequence always a1, a2; *)
(* property := sequence always a1, a2, a3, a4; *)
