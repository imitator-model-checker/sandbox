(************************************************************
 *                      IMITATOR MODEL                      
 *
 * Very classical looping timed automaton that loops without the use of a proper extrapolation or clock elimination techniques
 *
 * Description     : Very classical looping timed automaton that loops without the use of a proper extrapolation or clock elimination techniques
 * Correctness     : N/A
 * Source          : Own work (?)
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 * License         : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)

 *
 * Created         : 2009/12/23
 * Last modified   : 2016/06/08
 *
 * IMITATOR version: 2.8-alpha
 ************************************************************)

var

(* Clocks *)
 	x, y
		: clock;



(************************************************************)
  automaton pta
(************************************************************)
synclabs: a;

loc l1: while True wait {}
	when x = 1 sync a do {x' = 0} goto l1;

end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	& loc[pta] = l1

	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& x = 0
	& y = 0

;


(************************************************************)
(* Property specification *)
(************************************************************)


(************************************************************)
(* The end *)
(************************************************************)
end
