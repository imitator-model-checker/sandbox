(************************************************************
 *                      IMITATOR MODEL                      
 *
 * Model to test the syntax of IMITATOR (no discrete value in bad definition)
 *
 * Description     : Equivalent model of testBadDiscretes (with bounded discrete)
 * Correctness     : N/A
 * Source          : IMITATOR
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 *
 * Created         : 2015/07/31
 * Last modified   : 2015/07/31
 *
 * IMITATOR version: 2.7.2
 ************************************************************)

var

(* Clocks *)
 	x, y
		: clock;

(* Parameters *)
	p
		: parameter;



(************************************************************)
  automaton pta
(************************************************************)
synclabs: a;

loc l1_0: while True wait {}
	when x = 0 & x = p sync a do {x' = 0} goto l2;
	when y = 1 sync a do {y' = 0} goto l1_1;

loc l1_1: while True wait {}
	when x = 1 & x = p sync a do {x' = 0} goto l2;
	when y = 1 sync a do {y' = 0} goto l1_2;

loc l1_2: while True wait {}
	when x = 2 & x = p sync a do {x' = 0} goto l2;
	when y = 1 sync a do {y' = 0} goto l1_3;

loc l1_3: while True wait {}
	when x = 3 & x = p sync a do {x' = 0} goto l2;

loc l2: while True wait {}
end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(*   INITIAL LOCATION *)
	(*------------------------------------------------------------*)
	& loc[pta] = l1_0

	(*------------------------------------------------------------*)
	(*   INITIAL CLOCKS *)
	(*------------------------------------------------------------*)
	& x = 0
	& y = 0

	(*------------------------------------------------------------*)
	(*   PARAMETER CONSTRAINTS *)
	(*------------------------------------------------------------*)
	& p >= 0
;


(************************************************************)
(* Property specification *)
(************************************************************)

property := unreachable loc[pta] = l2;


(************************************************************)
(* The end *)
(************************************************************)
end
