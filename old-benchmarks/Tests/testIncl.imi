(************************************************************
 *                      IMITATOR MODEL                      
 *
 * Basic example for testing state inclusion in both directions
 *
 * Description     : Basic example for testing state inclusion in both directions
 * Correctness     : N/A
 * Source          : Own work
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 * License         : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created         : 2017/03/24
 * Last modified   : 2017/03/24
 *
 * IMITATOR version: 2.9
 ************************************************************)

var

(* Clocks *)
 	x, y
		: clock;

(* Parameters *)
	p
		: parameter;



(************************************************************)
  automaton pta
(************************************************************)
synclabs: a;

loc l1: while True wait {}
	when x <= 2 do {y' = 0} goto l3;
	when x <= 4 do {y' = 0} goto l2;

loc l2: while True wait {}
	when True goto l3;

loc l3: while True wait {}
end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	& loc[pta] = l1

	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& x = 0
	& y = 0

	(*------------------------------------------------------------*)
	(* Parameter constraints *)
	(*------------------------------------------------------------*)
	& p >= 0
;


(************************************************************)
(* Property specification *)
(************************************************************)

(* property := unreachable loc[pta] = l1; *)


(************************************************************)
(* The end *)
(************************************************************)
end
