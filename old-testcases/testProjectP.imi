(************************************************************
 *                      IMITATOR MODEL                      
 *
 * Very toy PTA
 *
 * Description     : Toy PTA, used to test projection
 * Correctness     : N/A
 * Source          : Own work
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 * License         : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created         : 2019/03/06
 * Last modified   : 2019/03/06
 *
 * IMITATOR version: 2.11.1
 ************************************************************)

var

(* Clocks *)
 	x, xabs,
		: clock;

(* Parameters *)
	pabs, p1, p2, p3, p4 = 2
		: parameter;



(************************************************************)
  automaton pta
(************************************************************)
synclabs: a, b;

loc l1: invariant x <= p1
	when x = p1 sync a do {x := 0} goto l2;

	when x = p1 & xabs = pabs sync a do {x := 0} goto lfinal;

loc l2: invariant x <= p3
	when x = p3 & xabs >= 0 sync a do {x := 0} goto l3;
	when x = p4 & xabs >= 0 sync b do {x := 0} goto l4;

	when x = p3 & xabs >= 0 & xabs = pabs sync a do {x := 0} goto lfinal;
	when x = p4 & xabs >= 0 & xabs = pabs sync b do {x := 0} goto lfinal;

loc l3: invariant x <= 2
	when True sync a do {x := 0} goto l4;
	when True & xabs = pabs sync a do {x := 0} goto lfinal;

loc l4: invariant x <= 2

urgent loc lfinal: invariant True

end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	& loc[pta] = l1

	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& x = 0
	& xabs = 0

	(*------------------------------------------------------------*)
	(* Parameter constraints *)
	(*------------------------------------------------------------*)
	& pabs >= 0
	& p1 >= 0
	& p2 >= 0
	& p3 >= 0
	& p4 >= 0
;


(************************************************************)
(* Property specification *)
(************************************************************)

(* property := unreachable loc[pta] = l1; *)
projectresult(pabs)

(************************************************************)
(* The end *)
(************************************************************)
end
